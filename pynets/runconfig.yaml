maxcrossing: # Maximum crossing fibers per voxel in tractography
    - 2
overlap_thr: # Tractography/ node overlap in units of voxels
    - 1
step_list: # Ensemble tractography, should never exceed the voxel size.
    - 0.1
    - 0.2
    - 0.3
    - 0.4
    - 0.5
curv_thr_list: # Ensemble tractography, should be [0, 90] degrees.
    - 40
    - 30
clustering_local_conn: # If you are running agglomerative-type clustering (e.g. ward, average, single, complete) this setting indicates which spatially constrained local connectivity definition to use. Options are 'allcorr' (all voxels have equal weight), 'scorr' (spatial-connectivity across time-series), and 'tcorr' (temporal-connectivity across time-series).
    - 'allcorr'
c_boot: # Number of bootstrapped iterations for spatially-constrained clustering
    - 1
tracking_method: # a tracking algorithm for dmri connectome estimation. Options are: local and particle.
    - 'local'
tissue_classifier: # Indicates the tissue classification method to use for dMRI tractography. Options are: cmc (continuous), act (anatomically-constrained), wb (whole-brain mask), and bin (binary to white-matter only). If particle tracking is used, then this variable will be auto-set to 'cmc'.
    - 'bin'
tracking_samples: # Indicates the number of cumulative streamline samples for tractography.
    - 10000
aal_names: # Whether to use AAL lookup to label nodes of a custom atlas or atlas without labels. Default is True.
    - True
DSN: # Experimental option. Direct Streamline Normalization attempts to normalize streamlines (i.e. post-reconstruction) to a morphologically standardized scaling (i.e. range of fiber lengths) specific to the template used.
    - False
hub_detection_method: # Valid inputs are richclub, eigenvector centrality, betweenness centrality, coreness (requires installation of cpalgoorithm)
    - 'betweenness'
nilearn_parc_atlases:
    - 'atlas_harvard_oxford'
    - 'atlas_aal'
    - 'atlas_destrieux_2009'
    - 'atlas_talairach_gyrus'
    - 'atlas_talairach_ba'
    - 'atlas_talairach_lobe'
nilearn_coord_atlases:
    - 'coords_power_2011'
    - 'coords_dosenbach_2010'
nilearn_prob_atlases:
    - 'atlas_msdl'
    - 'atlas_pauli_2017'
local_atlases:
    - 'destrieux2009_rois'
    - 'BrainnetomeAtlasFan2016'
    - 'VoxelwiseParcellationt0515kLeadDBS'
    - 'Juelichgmthr252mmEickhoff2005'
    - 'CorticalAreaParcellationfromRestingStateCorrelationsGordon2014'
    - 'AICHAreorderedJoliot2015'
    - 'HarvardOxfordThr252mmWholeBrainMakris2006'
    - 'VoxelwiseParcellationt058kLeadDBS'
    - 'MICCAI2012MultiAtlasLabelingWorkshopandChallengeNeuromorphometrics'
    - 'Hammers_mithAtlasn30r83Hammers2003Gousias2008'
    - 'AALTzourioMazoyer2002'
    - 'DesikanKlein2012'
    - 'AAL2zourioMazoyer2002'
    - 'VoxelwiseParcellationt0435kLeadDBS'
    - 'AICHAJoliot2015'
    - 'whole_brain_cluster_labels_PCA100'
    - 'whole_brain_cluster_labels_PCA200'
    - 'RandomParcellationsc05meanalll43Craddock2011'
available_models:
    func_models:
      - 'corr'
      - 'sps'
      - 'cov'
      - 'partcorr'
      - 'QuicGraphicalLasso'
      - 'QuicGraphicalLassoCV'
      - 'QuicGraphicalLassoEBIC'
      - 'AdaptiveQuicGraphicalLasso'
    struct_models:
      - 'csa'
      - 'csd'
      - 'tensor'
template: # `MNI152_T1` is the default and is provided by PyNets already. Other templates can be specified from templateflow (<https://github.com/templateflow/templateflow>), which will be fetched automatically: `MNI152Lin`, `MNI152NLin2009cAsym`, `MNI152NLin2009cSym`, `MNI152NLin6Asym`, `MNI152NLin6Sym`, `MNIInfant`, `MNIPediatricAsym`, `NKI`, `OASIS30ANTs` Any custom templates should reside in the pynets/templates directory and be accompanied by two additional versions with _brain.nii.gz and brain_mask.nii.gz, followed by _1mm/_2mm suffices.
    - 'MNI152_T1'
bids_defaults:
    space:
        - 'T1w'
    desc:
        - 'preproc'
sentiment_labeling:
    liwc_file:
        - '/Users/derekpisner/Documents/LIWC2015_English.dic' # Must be purchased and licensed.
    neurosynth_db:
        - '/Users/derekpisner/Documents/neurosynth_nimare_with_abstracts.pkl.gz' # https://nimare.readthedocs.io/
plotting:
    connectogram:
        - False
    glassbrain:
        - True
    adjacency:
        - True
    dpi:
        - 300
    functional:
        glassbrain:
            color_theme:
              - 'Blues_d'
        adjacency:
            color_theme:
                - 'RdBu'
    structural:
        glassbrain:
            color_theme:
              - 'binary' # Recommend keeping the default here, as it produces white edges resembling white-matter fibers
        adjacency:
            color_theme:
                - 'RdBu_r'
resource_dict: # Nipype workflow resource settings
      - 'fetch_nodes_and_labels_node':
        - (2, 4)
      - 'save_nifti_parcels_node':
        - (1, 1.5)
      - 'gtab_node':
        - (1, 0.5)
      - 'save_coords_and_labels_node':
        - (1, 1.5)
      - 'check_orient_and_dims_func_node':
        - (2, 2)
      - 'check_orient_and_dims_mask_node':
        - (1, 0.5)
      - 'check_orient_and_dims_uatlas_node':
        - (1, 3)
      - 'check_orient_and_dims_anat_node':
        - (1, 0.5)
      - 'node_gen_node':
        - (2, 4)
      - get_node_membership_node:
        - (1, 4)
      - 'check_orient_and_dims_dwi_node':
        - (1, 4)
      - 'get_anisopwr_node':
        - (1, 1)
      - 'extract_ts_node':
        - (2, 4)
      - 'clustering_node':
        - (2, 6)
      - 'get_conn_matrix_node':
        - (1, 2)
      - 'thresh_func_node':
        - (1, 2)
      - 'register_node':
        - (1, 3)
      - 'register_atlas_node':
        - (1, 2)
      - 'get_fa_node':
        - (1, 1)
      - 'run_tracking_node':
        - (2, 4)
      - 'thresh_diff_node':
        - (1, 2)
      - 'dsn_node':
        - (2, 2)
      - 'plot_all_node':
        - (1, 2)
      - 'streams2graph_node':
        - (2, 4)
      - 'build_multigraphs_node':
        - (2, 6)
      - 'plot_all_struct_func_node':
        - (1, 2)
      - 'mase_embedding_node':
        - (2, 6)
      - 'omni_embedding_node':
        - (2, 4)
      - 'join_iters_node_thr':
        - (1, 1)
      - 'join_iters_node_nets':
        - (1, 1)
      - 'get_node_membership_node':
        - (1, 1)
      - 'clust_join_node':
        - (1, 1)
execution_dict: # Nipype workflow global settings
    - 'stop_on_first_crash':
        - False
    - 'crashfile_format':
        - 'txt'
    - 'parameterize_dirs':
        - False
    - 'display_variable':
        - ':0'
    - 'job_finished_timeout':
        - 120
    - 'matplotlib_backend':
        - 'Agg'
    - 'use_relative_paths':
        - True
    - 'keep_inputs':
        - True
    - 'remove_unnecessary_outputs':
        - False
    - 'remove_node_directories':
        - False
    - 'raise_insufficient':
        - False
    - 'maxtasksperchild':
        - 1
    - 'poll_sleep_duration':
        - 1
    - 'hash_method':
        - 'timestamp'
    - 'local_hash_check':
        - False
